/* Cube on a flat 2D Plane
         ___
 ___ ___|_b_|___
|_T_|_L_|_B_|_R_|
        |_f_|

Key:
T = Top
L = Left
B = Bottom
R = Right
b = back
f = front

------------
Visualization of a single perfect square with applied degree rotation
  ____
| ^    | = Rotation on X axis = 0 degree
| ____ | = Rotation on Y axis = 0 degree

  ____
|      | = Rotation on X axis = 180 degree
| v___ | = Rotation on Y axis = 0 degree

  ____
|    ^ | = Rotation on X axis = 0 degree
| ____ | = Rotation on Y axis = 180 degree

Left and rights would be on Y axis based on second demonstration?
Top and Bottoms would be on X axis?
Face remains in same slot.
Back would need to do a full rotation via 180 Degree.

-----------------------

Need 6 divs to represent each face.
Probably best to stack divs on top of each other via absolute positioning.

-----------------------

If ALL 6 squares are stacked on each other....

Front MUST = 0
Therefore Back MUST = 180

*/
@import url('https://fonts.googleapis.com/css2?family=Manrope:wght@400;500&display=swap');


/* *{
  transition: 2s;
}*/

body {
  height:100vh;
  background-color: rgba(47,47,47,1);
  overflow: hidden;
  position: relative;
}


.notice {
  background: rgba(0,0,0,.7);
  height: 325px;
  width: 300px;
  color: #fff;
  border-radius: 5px;
  border: 1px solid #fff;
  text-align: center;
  position: absolute;
  font-family: 'Manrope', sans-serif;
  font-weight: 500;
  z-index: 10;
}


.notice a {color: #fff;}

.cube, .face {
  position: absolute;
}


/*Cube upsidedown
.cube, .face {
  position: absolute;
  bottom: 60%;
  left: 50%;
}


Cube 90 deg
.cube, .face {
  position: absolute;
  bottom: 60%;
  left: 47.6%;
}

 cube -90 deg
.cube, .face {
  position: absolute;
  top: 47.5%;
  left: 50%;
} */



.cube {
  user-select: none;
  cursor: move;
  transform: rotate(0deg);
  transform-style: preserve-3d;
}

/*Cube 180deg
.cube {
  user-select: none;
  cursor: move;
  transform: rotate(180deg);
}

Cube 90
.cube {
  user-select: none;
  cursor: move;
  transform: rotate(90deg);
}

Cube -90
.cube {
  user-select: none;
  cursor: move;
  transform: rotate(-90deg);
}*/

.face {
  box-sizing: border-box;
  margin: -8em;
  width: 25em;
  height: 25em;
  background-color: rgba(0,0,0,1);
  opacity: 0.6;
  box-shadow: 0px 0px 10px #fff;
}

.face:hover {
  background-color: rgba(0,0,0,1);
  opacity: 1;
}


.cube div span
{
	position: fixed;
	font-size: 2em;
  color: #fff;
  height: 50px;
  width: 50px;
}

.cube div span:nth-child(1) {
  left: 0;
  top: 0;
  /*margin-top: -35px;*/
}

.cube div span:nth-child(2) {
  right: 0;
  top: 0;
  /*margin-right: -25px;
  margin-top: -35px;*/
}

.cube div span:nth-child(3) {
  left: 0;
  bottom: 0;
  /*margin-bottom: -50px;*/
}

.cube div span:nth-child(4) {
  right: 0;
  bottom: 0;
  /*margin-right: -25px;
  margin-bottom: -50px;*/
}
/*
.cube div:nth-child(n+2) span {
  display: none;
}
*/


/* - - - - - Animation - - - - - */

.floatwrap{
    position: absolute;
    top: 40%;
    left: 50%;
    transform-style: preserve-3d;
    animation: float 10s infinite cubic-bezier(.5, 0, .5, 1);

}

.spinwrap {
    transform-style: preserve-3d;
    animation: spin 30s infinite linear;
    transition: 2s;
}


@keyframes float{
    0% {transform: translateY(15px);}
    50% {transform: translateY(-15px);}
    100% {transform: translateY(15px);}
}

@keyframes spin {
       from{transform: rotateY(0deg);}
       to{transform: rotateY(-360deg);}
    }



@keyframes tossing {
	0% {
		transform: rotate(-4deg);
	}
	50% {
		transform: rotate(4deg);
	}
	100% {
		transform: rotate(-4deg);
	}
}

@-webkit-keyframes tossing {
	0% {
		-webkit-transform: rotate(-4deg);
	}
	50% {
		-webkit-transform: rotate(4deg);
	}
	100% {
		-webkit-transform: rotate(-4deg);
	}
}
/*
@keyframes spinner {
  from {transform: rotateY(0deg) rotateX(0deg);}
  to {transform: rotateY(359deg) rotateX(359deg);}
}*/


/*Added classes */

.trans {
  transition: 2s;
}
